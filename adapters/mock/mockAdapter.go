// Code generated by MockGen. DO NOT EDIT.
// Source: adapter_interfaces.go

// Package mock_adapterinterfaces is a generated GoMock package.
package mock_adapterinterfaces

import (
	reflect "reflect"

	entities "github.com/akshay0074700747/user-service/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockAdapterInterface is a mock of AdapterInterface interface.
type MockAdapterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterInterfaceMockRecorder
}

// MockAdapterInterfaceMockRecorder is the mock recorder for MockAdapterInterface.
type MockAdapterInterfaceMockRecorder struct {
	mock *MockAdapterInterface
}

// NewMockAdapterInterface creates a new mock instance.
func NewMockAdapterInterface(ctrl *gomock.Controller) *MockAdapterInterface {
	mock := &MockAdapterInterface{ctrl: ctrl}
	mock.recorder = &MockAdapterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdapterInterface) EXPECT() *MockAdapterInterfaceMockRecorder {
	return m.recorder
}

// Adduser mocks base method.
func (m *MockAdapterInterface) Adduser(req entities.Users) (entities.Users, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Adduser", req)
	ret0, _ := ret[0].(entities.Users)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Adduser indicates an expected call of Adduser.
func (mr *MockAdapterInterfaceMockRecorder) Adduser(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Adduser", reflect.TypeOf((*MockAdapterInterface)(nil).Adduser), req)
}

// GetAllUsers mocks base method.
func (m *MockAdapterInterface) GetAllUsers() ([]entities.Users, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllUsers")
	ret0, _ := ret[0].([]entities.Users)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllUsers indicates an expected call of GetAllUsers.
func (mr *MockAdapterInterfaceMockRecorder) GetAllUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllUsers", reflect.TypeOf((*MockAdapterInterface)(nil).GetAllUsers))
}

// GetUser mocks base method.
func (m *MockAdapterInterface) GetUser(id uint) (entities.Users, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", id)
	ret0, _ := ret[0].(entities.Users)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockAdapterInterfaceMockRecorder) GetUser(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockAdapterInterface)(nil).GetUser), id)
}
